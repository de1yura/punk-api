{"version":3,"sources":["components/Navbar/Navbar.module.scss","components/Main/Filters/Filters.module.scss","components/Main/Login.module.scss","components/Main/CardList/Card/Card.module.scss","components/Main/Main.module.scss","components/Main/CardList/CardList.module.scss","data/brewdog.jpeg","components/Main/CardList/Card/index.js","components/Main/CardList/Card/Card.jsx","components/Main/CardList/index.js","components/Main/CardList/CardList.jsx","components/Navbar/index.js","components/Navbar/Navbar.jsx","components/Main/Filters/index.js","components/Main/Filters/Filters.jsx","fire.js","components/Main/Login.jsx","components/Main/Main.jsx","components/Main/index.js","App.jsx","serviceWorker.js","index.js"],"names":["module","exports","Card","props","beer","themeContext","useContext","ThemeContext","className","isDarkTheme","styles","dark","cont","src","image_url","alt","description","heading","name","tagline","first_brewed","CardList","beers","filteredBeers","beersJSX","map","darkContainer","container","Navbar","user","handleSignout","email","toggleTheme","themeProvider","nav","logo","switch","type","onClick","slider","round","signIn","to","Filters","isChecked","setIsChecked","isPhChecked","setIsPhChecked","dateFilter","setDateFilter","filters","filter","abv","htmlFor","id","onChange","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","Login","setEmail","password","setPassword","handleLogin","handleSignup","hasAccount","setHasAccount","emailError","passwordError","history","useHistory","login","loginContainer","value","e","target","errorMsg","btnContainer","push","createContext","Main","searchHandler","useState","setUser","setEmailError","setPasswordError","clearError","authListener","fire","auth","onAuthStateChanged","useEffect","setIsDarkTheme","themeData","Provider","path","signInWithEmailAndPassword","catch","err","code","message","createUserWithEmailAndPassword","signOut","then","window","location","reload","darkSearch","searchbar","placeholder","dashboard","App","address","setBeers","fetch","res","json","data","searchFilter","setSearchFilter","ph","split","toLowerCase","includes","trim","Boolean","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","console"],"mappings":"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","file":"static/js/main.248f7119.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Navbar_container__Stw5O\",\"darkContainer\":\"Navbar_darkContainer__LPP9w\",\"nav\":\"Navbar_nav__3cHYR\",\"logo\":\"Navbar_logo__46AHD\",\"dark\":\"Navbar_dark__1DsTf\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"filters\":\"Filters_filters__2vYGo\",\"filter\":\"Filters_filter__P8bsE\",\"abv\":\"Filters_abv__48HWC\",\"dark\":\"Filters_dark__2F0Z_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"login\":\"Login_login__1HlTk\",\"loginContainer\":\"Login_loginContainer__1Gid4\",\"btnContainer\":\"Login_btnContainer__2aRpN\",\"errorMsg\":\"Login_errorMsg__3CRgo\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"cont\":\"Card_cont__2d_xH\",\"heading\":\"Card_heading__v1LXH\",\"description\":\"Card_description__3SKeX\",\"dark\":\"Card_dark__3FP5Q\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dashboard\":\"Main_dashboard__1ZCFX\",\"dark\":\"Main_dark__785pK\",\"searchbar\":\"Main_searchbar__3O_NU\",\"darkSearch\":\"Main_darkSearch__1xO-d\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"CardList_container__2tcYg\",\"darkContainer\":\"CardList_darkContainer__2zSVt\"};","module.exports = __webpack_public_path__ + \"static/media/brewdog.8484de1b.jpeg\";","import Card from './Card'\n\nexport default Card;","import React, {useContext} from 'react';\nimport { ThemeContext } from '../../Main';\nimport styles from './Card.module.scss';\n\n\n\nconst Card = (props) => {\n\n  const {beer } = props\n\n  const themeContext = useContext(ThemeContext); \n\n  return (\n    <div className={themeContext.isDarkTheme ? styles.dark : styles.cont}>\n      <img src={beer.image_url} alt=\"beer picture\" />\n\n      <div className={styles.description}>\n          <div className={styles.heading}>\n            <h2>\n              {beer.name}\n            </h2>\n            <p>{beer.tagline}</p>\n          </div>\n\n          <p>{beer.description}</p>\n\n          <h4>First Brewed</h4>\n          <p>{beer.first_brewed}</p>\n      </div>\n    </div>\n\n  )\n}\n\nexport default Card\n","import CardList from './CardList'\n\nexport default CardList;","import React, {useState, useContext} from 'react'\nimport { ThemeContext } from '../Main'\nimport Card from './Card'\nimport styles from './CardList.module.scss'\n\nconst CardList = (props) => {\n\n  const {beers, filteredBeers} = props\n  \nconst themeContext = useContext(ThemeContext);\n\n\nconst beersJSX = filteredBeers.map((beer) => {\n  return <Card \n  beer={beer}/>\n})\n\n\n  return (\n    <div className= {themeContext.isDarkTheme ? styles.darkContainer : styles.container}>\n      {beersJSX}\n    </div>\n  )\n}\n\nexport default CardList\n","import Navbar from './Navbar';\n\nexport default Navbar;","import React, {useContext} from 'react';\nimport styles from './Navbar.module.scss';\nimport logo from '../../data/brewdog.jpeg';\nimport { BrowserRouter as Router, Link, Route, Switch } from 'react-router-dom';\nimport { ThemeContext } from '../Main/Main';\n\nconst Navbar = (props) => {\n\n  const{user, handleSignout, email, toggleTheme} =props;\n  const themeProvider = useContext(ThemeContext);\n\n  return (\n    <div className={themeProvider.isDarkTheme ? styles.darkContainer : styles.container}>\n    <nav className={themeProvider.isDarkTheme ? styles.dark : styles.nav}>\n      <section className={styles.logo}>\n        <img src={logo} alt=\"logo\" />\n      </section>\n\n     <label className={styles.switch}>\n     Toggle theme\n       <input type=\"checkbox\" onClick={toggleTheme}/>\n       <span className={styles.slider & styles.round}></span> \n     </label>\n      \n\n      {email ? (<p>user: {email}</p>): (<p></p>)}\n      <section className={styles.signIn}>\n        {user ? (<p onClick={handleSignout}>Sign Out</p>):(<Link to=\"/login\"><p>Sign In</p></Link>)}   \n      </section>\n    </nav>\n    </div>\n  )\n}\n\nexport default Navbar\n","import Filters from './Filters'\nexport default Filters;","import React, {useState, useContext} from 'react'\nimport { ThemeContext } from '../Main';\nimport styles from './Filters.module.scss'\n\nconst Filters = (props) => {\n\nconst { filteredBeers, isChecked, setIsChecked, isPhChecked, setIsPhChecked, dateFilter, setDateFilter} = props;\nconst themeContext = useContext(ThemeContext);\n\n  const handleChecked = () =>{\n    setIsChecked(!isChecked);\n  }\n  const handlePhChecked = () =>{\n    setIsPhChecked(!isPhChecked);\n  }\n  const handleDateChecked = () => {\n    setDateFilter(!dateFilter)\n  }\n\n  return (\n    \n    <div className={themeContext.isDarkTheme ? styles.dark : styles.filters}>\n\n      <div className={styles.filter}>\n        <h2>Filters</h2>\n      </div>\n      \n      <div className={styles.abv}>\n        <label htmlFor=\"abv\"> ABV greater than 6%</label>\n        <input id=\"check6\" type=\"checkbox\" onChange={handleChecked}/>\n      </div>\n\n      <div className={styles.abv}>\n        <label htmlFor=\"abv\"> Ph less than 4</label>\n        <input id=\"checkPh\" type=\"checkbox\" onChange={handlePhChecked}/>\n      </div>\n\n      <div className={styles.abv}>\n        <label > Brewed before 2010</label>\n        <input id=\"checkPh\" type=\"checkbox\" onChange={handleDateChecked}/>\n      </div>\n\n    </div>\n  )\n}\n\nexport default Filters\n","import firebase from 'firebase';\n\nvar firebaseConfig = {\n  apiKey: \"AIzaSyBsDlfqaGMX7NBXqTGhbRCZul4i3KTVH90\",\n  authDomain: \"punk-api-80e68.firebaseapp.com\",\n  projectId: \"punk-api-80e68\",\n  storageBucket: \"punk-api-80e68.appspot.com\",\n  messagingSenderId: \"683675382968\",\n  appId: \"1:683675382968:web:98090c5ef60d1f7511b04d\"\n};\n\nconst fire = firebase.initializeApp(firebaseConfig);\n\nexport default firebase;","import React, {useContext} from 'react'\nimport styles from './Login.module.scss'\nimport { BrowserRouter as Link } from 'react-router-dom';\nimport { useHistory } from \"react-router-dom\";\n\nconst Login = (props) => {\n\n  const { email, setEmail, password, setPassword, handleLogin, handleSignup, hasAccount, setHasAccount, emailError, passwordError } = props;\n\n  let history = useHistory();\n  const handleHome = () => {\n    history.push(\"/\");\n  }\n\n  const handleCombined = () => {\n    handleLogin();\n    handleHome();\n  }\n\n  \n\n  return (\n    <section className={styles.login}>\n      <div className={styles.loginContainer}>\n        <label>Email</label>\n        <input type=\"text\" value={email} onChange={(e)=> setEmail(e.target.value)}/>\n        <p className={styles.errorMsg}>{emailError}</p>\n\n        <label>Password</label>\n        <input type=\"password\" value={password} onChange={(e)=>{setPassword(e.target.value)}}/>\n        <p className={styles.errorMsg}>{passwordError}</p>\n\n          <div className={styles.btnContainer}>\n            {hasAccount ? (\n              <>\n              <button onClick={handleCombined}>Sign in</button>\n              <p>Don't have an account? <span onClick={()=> setHasAccount(!hasAccount)}>Sign up</span></p>\n              </>\n            ): \n            ( <>\n              <button onClick={handleSignup}>Sign up</button>\n              <p>Have an account? <span onClick={()=> setHasAccount(!hasAccount)}>Sign in</span></p>\n              </>)}\n          </div>\n      </div>\n    </section>\n  )\n}\n\nexport default Login\n","import React, {useState, createContext, useEffect} from 'react'\nimport CardList from './CardList'\nimport Navbar from '../Navbar'\nimport Filters from './Filters'\nimport styles from './Main.module.scss';\nimport fire from '../../fire';\nimport Login from './Login'\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\n\n\nexport const ThemeContext = createContext({});\n\nconst Main = (props) => {\n\n  const {beers, filteredBeers, searchHandler, isChecked, setIsChecked, isPhChecked, setIsPhChecked, dateFilter, setDateFilter} = props\n\n\n  // FIREBASE AUTH\n\n  const [user, setUser]= useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [emailError, setEmailError] = useState('test');\n  const [passwordError, setPasswordError] = useState('');\n  const [hasAccount, setHasAccount] = useState(false);\n\n  const clearLogin = () => {\n    setPassword('');\n  }\n\n  const clearError = () => {\n    setEmailError('');\n    setPasswordError('');\n  }\n\n  const handleLogin = () => {\n    clearError();\n    fire\n      .auth()\n      .signInWithEmailAndPassword(email, password)\n      .catch((err) => {\n        switch (err.code) {\n          case \"auth/invalid-email\":\n          case \"auth/user-not-found\":\n            setEmailError(err.message);\n            break;\n          case \"auth/wrong-password\":\n            setPasswordError(err.message);\n            break;\n        }\n      })\n    };\n\n    const handleSignup = () => {\n      clearError();\n      fire\n      .auth()\n      .createUserWithEmailAndPassword(email, password)\n      .catch((err) => {\n        switch (err.code) {\n          case \"auth/email-in-use\":\n          case \"auth/invalid-email\":\n            setEmailError(err.message);\n            break;\n        }\n      })\n    }\n\n    const handleSignout = () => {\n      fire.auth().signOut().then(window.location.reload());\n\n    }\n\n    const authListener = () => {\n      fire.auth().onAuthStateChanged(user => {\n        if(user){\n          clearLogin();\n          setUser(user)\n        } else {\n          setUser(\"\");\n        }\n      })\n    }\n\n    useEffect(() => {\n      authListener();\n    }, [])\n\n    //---------------------------------------------------------//\n  //THEME\n  const [isDarkTheme, setIsDarkTheme] = useState(false);\n\n  const toggleTheme = () => {\n    setIsDarkTheme(!isDarkTheme);\n  }\n\n  const themeData = {\n    isDarkTheme: isDarkTheme,\n    toggleTheme: toggleTheme \n  }\n\n  \n\n\n  return (\n    <ThemeContext.Provider value={themeData}>\n    <Router>\n      <Switch>\n      <Route path=\"/login\">   \n      <Login \n      email={email} \n      setEmail={setEmail} \n      password={password} \n      setPassword={setPassword}\n      handleLogin={handleLogin}\n      handleSignup={handleSignup}\n      hasAccount={hasAccount}\n      setHasAccount={setHasAccount}\n      emailError={setEmailError}\n      passwordError={setPasswordError}\n      />\n      </Route>\n      \n      <Route path=\"/\">\n        <Navbar\n        user={user}\n        handleSignout={handleSignout}\n        email={email}\n        toggleTheme={toggleTheme}\n        />\n        <div className={isDarkTheme ?  styles.darkSearch : styles.searchbar} >\n          <input type=\"text\" placeholder=\"search...\" onChange={searchHandler}/>\n        </div>\n        <div className={isDarkTheme ?  styles.dark : styles.dashboard}>\n\n        <Filters \n        beers={beers} \n        filteredBeers={filteredBeers}\n        isChecked={isChecked}\n        setIsChecked={setIsChecked}\n        isPhChecked={isPhChecked}\n        setIsPhChecked={setIsPhChecked}\n        dateFilter={dateFilter}\n        setDateFilter={setDateFilter}\n\n        />\n        <CardList \n        beers={beers} \n        filteredBeers={filteredBeers} \n        searchHandler={searchHandler}\n        isChecked={isChecked}\n        setIsChecked={setIsChecked}\n        />\n        \n        </div>       \n       </Route>\n       </Switch>\n    </Router>\n    </ThemeContext.Provider>\n  )\n}\n\nexport default Main\n","import Main from './Main'\n\nexport default Main;","import React, {useState, useEffect} from 'react';\nimport './App.css';\nimport Main from './components/Main';\n\n\nconst App = () => {\n  \n  const [address, setAddress] = useState('https://api.punkapi.com/v2/beers');\n\n\n  const[beers, setBeers] = useState([]);\n\n  useEffect(()=> { \n  fetch(address)\n  .then(res => res.json())\n  .then(data => setBeers(data))\n }, []);\n\n  const [searchFilter, setSearchFilter] = useState('');\n  const [isChecked, setIsChecked] = useState(false);\n  const [isPhChecked, setIsPhChecked] = useState(false);\n  const [dateFilter, setDateFilter] = useState(false);\n\n\n  const searchHandler = (e) => { setSearchFilter(e.target.value) }\n  const filteredBeers = beers.filter((beer)=>{\n  \n  if(isChecked){\n    return beer.abv>6\n  }\n  if(isPhChecked){\n    return beer.ph <= 4\n  }\n  if(dateFilter){\n    //setAddress(\"https://api.punkapi.com/v2/beers?brewed_before=12-2010\")\n    return beer.first_brewed.split(\"/\")[1] <= 2010;\n  }\n   return beer.name.toLowerCase().includes(searchFilter.toLowerCase().trim())\n })\n\n\n\n  return (\n    <div>\n      {/* dont render main until beers exists */}    \n      {beers &&  <Main beers={beers} \n      filteredBeers={filteredBeers}\n      searchHandler={searchHandler}\n      isChecked={isChecked}\n      setIsChecked={setIsChecked}\n      isPhChecked={isPhChecked}\n      setIsPhChecked={setIsPhChecked}\n      dateFilter={dateFilter}\n      setDateFilter={setDateFilter}\n      /> }\n      \n    </div>\n  )\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}